{"version":3,"sources":["constants/routes.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","actions/index.js","components/SignOutButton/index.js","components/SignOutButton/SignOutButton.js","components/Navigation/Navigation.js","components/Navigation/index.js","components/SignInForm/SignInForm.js","components/SignInForm/index.js","scenes/Login/index.js","scenes/Login/Login.js","components/ToDoItem/index.js","components/ToDoItem/ToDoItem.js","components/ToDoList/index.js","components/ToDoList/ToDoList.js","containers/VisibleToDoList.js","components/Link/index.js","components/Link/Link.js","containers/FilterLink.js","components/Footer/index.js","components/Footer/Footer.js","containers/AddToDo.js","components/Total/index.js","components/Total/Total.js","containers/Total.js","components/UpdatePassword/index.js","components/UpdatePassword/UpdatePassword.js","scenes/Account/Account.js","scenes/Account/index.js","components/SignUpForm/SignUpFrom.js","components/SignUpForm/index.js","scenes/CreateAccount/index.js","scenes/CreateAccount/CreateAccount.js","scenes/PasswordForget/PasswordForget.js","scenes/PasswordForget/index.js","components/Modal/index.js","components/Modal/Modal.js","scenes/TeaRound/TeaRound.js","scenes/TeaRound/index.js","scenes/Choice/index.js","scenes/Choice/Choice.js","App.js","serviceWorker.js","reducers/todos.js","reducers/visibilityFilters.js","reducers/index.js","index.js"],"names":["ACCOUNT","FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","components_Firebase","Firebase","_this","this","classCallCheck","doCreateUserWithEmailAndPassword","email","displayName","password","auth","createUserWithEmailAndPassword","then","db","ref","currentUser","uid","set","name","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","updatePassword","addUserData","todos","catch","err","console","error","getData","userId","once","snapshot","val","addFriend","users","userFound","values","find","user","details","push","outbound","invited","accepted","acceptFriend","key","friendKey","map","newUser","i","keys","friends","filter","concat","inviteFriend","remove","inviteName","removeFriend","getFriends","initializeTeaRound","friendEmails","friend","update","time","Date","now","addDrink","drink","id","notes","removeDrink","updateDrink","getDrinks","app","initializeApp","database","VisibilityFilters","SignOutButton","connect","withRouter","_ref","history","dispatch","onClick","type","NavigationAuth","es_Link","to","ROUTES","components_SignOutButton","NavigationNonAuth","Navigation","authUser","Navigation_NavigationAuth","Navigation_NavigationNonAuth","SignInForm","state","errorMessage","changeValue","e","setState","defineProperty","target","value","onSubmit","event","_this$state","_this$props","objectSpread","message","preventDefault","_this2","onChange","placeholder","PureComponent","Login","components_SignInForm","ToDoItem","completed","text","ToDoList","claimTodo","length","item","components_ToDoItem","compare","b","getMostUsed","sort","reverse","Error","visibilityFilters","TodoList","Link","active","children","disabled","style","marginLeft","ownProps","visibilityFilter","Footer","FilterLink","input","trim","Math","random","node","Total","total","getTotal","UpdatePassword","success","Account","loading","onAuthStateChanged","res","className","components_UpdatePassword","AddToDo","VisibleToDoList","containers_Total","components_Footer","SignUpForm","SignUpFrom","CreateAccount","components_SignUpForm","PasswordForget","ourModal","toggleModal","show","TeaRound","friendMessage","showModal","updateFriendList","clearInput","shouldShow","_this3","components_Modal","Choice","drinks","drinkChoice","updating","teaRoundUid","window","location","search","split","setDrinkChoice","choice","toggleUpdating","shouldUpdate","changeDrink","changeNotes","BrowserRouter","components_Navigation","Route","path","component","Boolean","hostname","match","arguments","undefined","action","toConsumableArray","todo","combineReducers","store","createStore","rootReducer","ReactDOM","render","es","context","Provider","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+OAGaA,EAAU,WCDjBC,EAAkBC,IAAMC,cAAc,MAC/BC,EAAe,SAAAC,GAAS,OAAI,SAAAC,GAAK,OAC1CC,EAAAC,EAAAC,cAACR,EAAgBS,SAAjB,KACG,SAAAC,GAAQ,OAAIJ,EAAAC,EAAAC,cAACJ,EAADO,OAAAC,OAAA,GAAeP,EAAf,CAAsBK,SAAUA,SAIpCV,qBCLTa,iBAAS,CACbC,OAAQC,0CACRC,WAAYD,iCACZE,YAAaF,wCACbG,UAAWH,iBACXI,cAAeJ,6BACfK,kBAAmBL,iBCPrBM,EDWE,SAAAC,IAAc,IAAAC,EAAAC,KAAAb,OAAAc,EAAA,EAAAd,CAAAa,KAAAF,GAAAE,KAMdE,iCAAmC,SAACC,EAAOC,EAAaC,GACtD,OAAON,EAAKO,KACTC,+BAA+BJ,EAAOE,GACtCG,KAAK,WACJ,OAAOT,EAAKU,GACTC,IAAI,UAAYX,EAAKO,KAAKK,YAAYC,IAAM,YAC5CC,IAAI,CAAED,IAAKb,EAAKO,KAAKK,YAAYC,IAAKT,QAAOW,KAAMV,OAZ9CJ,KAgBde,6BAA+B,SAACZ,EAAOE,GAAR,OAC7BN,EAAKO,KAAKU,2BAA2Bb,EAAOE,IAjBhCL,KAkBdiB,UAAY,kBAAMlB,EAAKO,KAAKY,WAlBdlB,KAmBdmB,gBAAkB,SAAAhB,GAAK,OAAIJ,EAAKO,KAAKc,uBAAuBjB,IAnB9CH,KAqBdqB,iBAAmB,SAAAhB,GAAQ,OAAIN,EAAKO,KAAKK,YAAYW,eAAejB,IArBtDL,KAuBduB,YAAc,SAAAC,GACZzB,EAAKU,GACFC,IAAI,SAAWX,EAAKO,KAAKK,YAAYC,KACrCC,IAAI,CACHW,UAEDC,MAAM,SAAAC,GAAG,OAAIC,QAAQC,MAAMF,MA7BlB1B,KA+Bd6B,QAAU,WACR,IAAMC,EAAS/B,EAAKO,KAAKK,YAAYC,IACrC,OAAOb,EAAKU,GACTC,IAAI,UAAYoB,GAChBC,KAAK,SACLvB,KAAK,SAASwB,GAEb,OADaA,EAASC,OAASD,EAASC,MAAMT,OAAU,MArChDxB,KAyCdkC,UAAY,SAAA/B,GACV,OAAOJ,EAAKU,GACTC,IAAI,UACJqB,KAAK,SACLvB,KAAK,SAAAwB,GACJ,IAAIG,EAAQH,EAASC,OAAS,GAC1BG,EAAYjD,OAAOkD,OAAOF,GAAOG,KACnC,SAAAC,GAAI,OAAIA,EAAKC,QAAQrC,QAAUA,IAEjC,SAAIiC,GAAaA,EAAUI,QAAQ5B,MAAQb,EAAKO,KAAKK,YAAYC,OAC/Db,EAAKU,GAAGC,IAAI,SAAW0B,EAAUI,QAAQ5B,IAAM,YAAY6B,KAAK,CAC9DtC,MAAOJ,EAAKO,KAAKK,YAAYR,MAC7BS,IAAKb,EAAKO,KAAKK,YAAYC,IAC3B8B,UAAU,EACVC,SAAS,EACTC,UAAU,IAEL7C,EAAKU,GACTC,IAAI,SAAWX,EAAKO,KAAKK,YAAYC,IAAM,aAC3C6B,KAAK,CACJtC,MAAOiC,EAAUI,QAAQrC,MACzBS,IAAKwB,EAAUI,QAAQ5B,IACvB8B,UAAU,EACVC,SAAS,EACTC,UAAU,IAEXnB,MAAM,SAAAC,GAAG,OAAIC,QAAQD,IAAIA,SAnEtB1B,KAyEd6C,aAAe,SAACN,EAAMO,GACpB,OAAO/C,EAAKU,GACTC,IAAI,UACJqB,KAAK,SACLvB,KAAK,SAAAwB,GACJ,IAAIG,EAAQH,EAASC,OAAS,GAC1Bc,EAAY5D,OAAOkD,OAAOF,GAC3Ba,IACC,SAACC,EAASC,GAAV,OACED,EAAQT,QAAQrC,QAAUoC,EAAKpC,OAC/BhB,OAAOgE,KAAKF,EAAQG,WAEvBC,OAAO,SAAAP,GAAG,OAAY,IAARA,IACdQ,OAAO,IACV,SAAIP,IAAaR,GAAQA,EAAK3B,MAAQb,EAAKO,KAAKK,YAAYC,OAC1Db,EAAKU,GAAGC,IAAI,SAAW6B,EAAK3B,IAAM,YAAcmC,GAAWlC,IAAI,CAC7DV,MAAOJ,EAAKO,KAAKK,YAAYR,MAC7BS,IAAKb,EAAKO,KAAKK,YAAYC,IAC3B8B,UAAU,EACVC,SAAS,EACTC,UAAU,IAEL7C,EAAKU,GACTC,IAAI,SAAWX,EAAKO,KAAKK,YAAYC,IAAM,YAAckC,GACzDjC,IAAI,CACHV,MAAOoC,EAAKpC,MACZS,IAAK2B,EAAK3B,IACV8B,UAAU,EACVC,SAAS,EACTC,UAAU,IAEXnB,MAAM,SAAAC,GAAG,OAAIC,QAAQD,IAAIA,SAxGtB1B,KA8GduD,aAAe,SAAApD,GACbJ,EAAKU,GACFC,IAAI,SAAWX,EAAKO,KAAKK,YAAYC,IAAM,kBAC3C4C,SACH,IAAI1C,EAAOf,EAAKO,KAAKK,YAAYP,YACjC,OAAOL,EAAKU,GACTC,IAAI,SAAWX,EAAKO,KAAKK,YAAYC,IAAM,kBAC3CC,IAAI,CAAEV,QAAOsD,WAAY3C,KArHhBd,KAuHd0D,aAAe,SAACvD,EAAO2C,GACrB,OAAO/C,EAAKU,GACTC,IAAI,SAAWX,EAAKO,KAAKK,YAAYC,IAAM,YAAckC,GACzDU,UA1HSxD,KA4Hd2D,WAAa,WACX,OAAO5D,EAAKU,GACTC,IAAI,SAAWX,EAAKO,KAAKK,YAAYC,IAAM,YAC3CmB,KAAK,SACLvB,KAAK,SAAAwB,GAEJ,OADcA,EAASC,OAAS,MAjIxBjC,KAqId4D,mBAAqB,SAAAR,GACnB,IAAIS,EAAeT,EAAQJ,IAAI,SAAAc,GAAM,OAAIA,EAAO3D,QAChDJ,EAAKU,GAAGC,IAAI,SAAWX,EAAKO,KAAKK,YAAYC,IAAM,aAAamD,OAAO,CACrEnD,IAAKb,EAAKO,KAAKK,YAAYC,IAC3BT,MAAOJ,EAAKO,KAAKK,YAAYR,MAC7BiD,QAASS,EACTG,KAAMC,KAAKC,SA3IDlE,KA8IdmE,SAAW,SAACC,EAAOC,EAAIC,GACrBvE,EAAKU,GAAGC,IAAI,SAAW2D,EAAK,oBAAoB5B,KAAK,CACnD2B,QACAjE,MAAOJ,EAAKO,KAAKK,YAAYR,MAC7BmE,WAlJUtE,KAqJduE,YAAc,SAACF,EAAIvB,GACjB/C,EAAKU,GAAGC,IAAI,SAAW2D,EAAK,oBAAsBvB,GAAKU,UAtJ3CxD,KAwJdwE,YAAc,SAACH,EAAIvB,EAAKsB,EAAOE,GAC7B,OAAIA,GAASF,EACJrE,EAAKU,GAAGC,IAAI,SAAW2D,EAAK,oBAAsBvB,GAAKiB,OAAO,CACnEK,QACAjE,MAAOJ,EAAKO,KAAKK,YAAYR,MAC7BmE,UAEOA,EACFvE,EAAKU,GAAGC,IAAI,SAAW2D,EAAK,oBAAsBvB,GAAKiB,OAAO,CACnE5D,MAAOJ,EAAKO,KAAKK,YAAYR,MAC7BmE,UAEOF,EACFrE,EAAKU,GAAGC,IAAI,SAAW2D,EAAK,oBAAsBvB,GAAKiB,OAAO,CACnEK,QACAjE,MAAOJ,EAAKO,KAAKK,YAAYR,aAE1B,GAzKKH,KA2KdyE,UAAY,SAAAJ,GACV,OAAOtE,EAAKU,GACTC,IAAI,SAAW2D,EAAK,oBACpBtC,KAAK,SACLvB,KAAK,SAAAwB,GAEJ,OADaA,EAASC,OAAS,MA/KnCyC,IAAIC,cAActF,GAElBW,KAAKM,KAAOoE,IAAIpE,OAChBN,KAAKS,GAAKiE,IAAIE,sCEILC,EACI,gBADJA,EAEG,eAFHA,EAGI,gBCxBFC,ECeAC,cAAUC,YAAWrG,EATd,SAAAsG,GAAqC,IAAlC/F,EAAkC+F,EAAlC/F,SAAUgG,EAAwBD,EAAxBC,QAASC,EAAeF,EAAfE,SAM1C,OAAOrG,EAAAC,EAAAC,cAAA,UAAQoG,QALG,WAChBlG,EAAS+B,YACTiE,EAAQzC,KNRW,WMSnB0C,EFO6B,CAC/BE,KAAM,kBENC,gBCHHC,EAAiB,WACrB,OACExG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAMC,GAAIC,GAAV,YAEF3G,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAMC,GPdK,UOcX,UAEF1G,EAAAC,EAAAC,cAAC0G,EAAD,SAKFC,EAAoB,WACxB,OACE7G,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAMC,GP5BO,WO4Bb,aC7BKI,EDKI,SAAAX,GAAA,IAAGY,EAAHZ,EAAGY,SAAH,OACjB/G,EAAAC,EAAAC,cAAA,WAAM6G,EAAW/G,EAAAC,EAAAC,cAAC8G,EAAD,MAAqBhH,EAAAC,EAAAC,cAAC+G,EAAD,wBEFlCC,6MACJC,MAAQ,CACN9F,MAAO,GACPE,SAAU,GACV6F,aAAc,QAEhBC,YAAc,SAACC,EAAGtD,GAChB/C,EAAKsG,SAALlH,OAAAmH,EAAA,EAAAnH,CAAA,GACG2D,EAAMsD,EAAEG,OAAOC,WAGpBC,SAAW,SAAAC,GAAS,IAAAC,EACU5G,EAAKkG,MAAzB9F,EADUwG,EACVxG,MAAOE,EADGsG,EACHtG,SADGuG,EAEY7G,EAAKlB,MAA3BK,EAFU0H,EAEV1H,SAAUgG,EAFA0B,EAEA1B,QAClBhG,EACG6B,6BAA6BZ,EAAOE,GACpCG,KAAK,SAAAqF,GACJ9F,EAAKsG,SAALlH,OAAA0H,EAAA,EAAA1H,CAAA,GAAmBY,EAAKkG,QACxBf,EAAQzC,KAAKgD,KAEdhE,MAAM,SAAAG,GACL7B,EAAKsG,SAAS,CACZH,aAActE,EAAMkF,YAI1BJ,EAAMK,0FAEC,IAAAC,EAAAhH,KACCkG,EAAiBlG,KAAKiG,MAAtBC,aACR,OACEpH,EAAAC,EAAAC,cAAA,QAAMyH,SAAU,SAAAL,GAAC,OAAIY,EAAKP,SAASL,KACjCtH,EAAAC,EAAAC,cAAA,qBAEEF,EAAAC,EAAAC,cAAA,SACEqG,KAAK,QACL4B,SAAU,SAAAb,GAAC,OAAIY,EAAKb,YAAYC,EAAG,UACnCc,YAAY,WAGhBpI,EAAAC,EAAAC,cAAA,wBAEEF,EAAAC,EAAAC,cAAA,SACEqG,KAAK,WACL4B,SAAU,SAAAb,GAAC,OAAIY,EAAKb,YAAYC,EAAG,aACnCc,YAAY,cAGhBpI,EAAAC,EAAAC,cAAA,UAAQqG,KAAK,UAAb,SACCa,GAAgBpH,EAAAC,EAAAC,cAAA,kEAjDAmI,iBCJVnB,ED2DAhB,YAAWrG,EAAaqH,IE3DxBoB,mLCMX,OACEtI,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqI,EAAD,MACAvI,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAMC,GZTS,WYUb1G,EAAAC,EAAAC,cAAA,8BAEFF,EAAAC,EAAAC,cAACuG,EAAA,EAAD,CAAMC,GZPiB,cYQrB1G,EAAAC,EAAAC,cAAA,0CATyBmI,iBCJpBG,ECOE,SAAArC,GAAA,IAAGG,EAAHH,EAAGG,QAASmC,EAAZtC,EAAYsC,UAAWC,EAAvBvC,EAAuBuC,KAAvB,OACf1I,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAIwI,GACJ1I,EAAAC,EAAAC,cAAA,SAAIuI,GACJzI,EAAAC,EAAAC,cAAA,UAAQoG,QAASA,GAAjB,eCXWqC,ECkBA9I,EAVE,SAAAsG,GAA2C,IAAxCzD,EAAwCyD,EAAxCzD,MAAOkG,EAAiCzC,EAAjCyC,UAAWxI,EAAsB+F,EAAtB/F,SAEpC,OADAsC,EAAMmG,OAAS,GAAKzI,EAASqC,YAAYC,GAEvCA,GACAA,EAAMmG,OAAS,GACfnG,EAAMwB,IAAI,SAAA4E,GAAI,OACZ9I,EAAAC,EAAAC,cAAC6I,EAAD1I,OAAAC,OAAA,CAAU0D,IAAK8E,EAAKvD,IAAQuD,EAA5B,CAAkCxC,QAAS,kBAAMsC,EAAUE,EAAKvD,YCXhEyD,EAAU,SAAC/I,EAAWgJ,GAAZ,OACdhJ,EAAEwI,UAAYQ,EAAER,WAAa,EAAIxI,EAAEwI,UAAYQ,EAAER,UAAY,EAAI,GAE7DS,EAAc,SAACxG,EAAO6B,GAC1B,OAAQA,GACN,KAAKwB,EACH,OAAOrD,EACT,KAAKqD,EACH,OAAOrD,EAAMyG,KAAKH,GACpB,KAAKjD,EACH,OAAOrD,EAAMyG,KAAKH,GAASI,UAC7B,QACE,MAAM,IAAIC,MAAM,mBAAqB9E,KAY5B0B,cARS,SAAAkB,GAAK,MAAK,CAChCzE,MAAOwG,EAAY/B,EAAMzE,MAAOyE,EAAMmC,qBAGb,SAAAjD,GAAQ,MAAK,CACtCuC,UAAW,SAACrD,GAAD,OAAQc,EbfI,SAAAd,GAAE,MAAK,CAC9BgB,KAAM,aACNhB,Maa4BqD,CAAUrD,OAGzBU,CAGbsD,GC9BaC,ECOF,SAAArD,GAAA,IAAGsD,EAAHtD,EAAGsD,OAAQC,EAAXvD,EAAWuD,SAAUpD,EAArBH,EAAqBG,QAArB,OACXtG,EAAAC,EAAAC,cAAA,UACEoG,QAASA,EACTqD,SAAUF,EACVG,MAAO,CACLC,WAAY,QAGbH,ICJUzD,cARS,SAACkB,EAAO2C,GAAR,MAAsB,CAC5CL,OAAQK,EAASvF,SAAW4C,EAAM4C,mBAGT,SAAC1D,EAAUyD,GAAX,MAAyB,CAClDxD,QAAS,kBAAMD,EhBJ6B,CAC5CE,KAAM,wBACNhC,OgBE4CuF,EAASvF,YAGxC0B,CAGbuD,GCdaQ,ECGA,kBACbhK,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAC+J,EAAD,CAAY1F,OAAQwB,GAApB,SACA/F,EAAAC,EAAAC,cAAC+J,EAAD,CAAY1F,OAAQwB,GAApB,UACA/F,EAAAC,EAAAC,cAAC+J,EAAD,CAAY1F,OAAQwB,GAApB,aCiBWE,gBAtBC,SAAAE,GAAkB,IAC5B+D,EADa7D,EAAeF,EAAfE,SAGjB,OACErG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QACEyH,SAAU,SAAAL,GnBVK,IAAAoB,EmBWbpB,EAAEW,iBACGiC,EAAMxC,MAAMyC,SAGjB9D,GnBfaqC,EmBeIwB,EAAMxC,MnBfD,CAC9BnB,KAAM,WACNhB,GAAI6E,KAAKC,SACT3B,UmBaQwB,EAAMxC,MAAQ,MAGhB1H,EAAAC,EAAAC,cAAA,SAAO0B,IAAK,SAAA0I,GAAI,OAAKJ,EAAQI,KAC7BtK,EAAAC,EAAAC,cAAA,UAAQqG,KAAK,UAAb,gBCnBOgE,ECCD,SAAApE,GAAe,IAAZqE,EAAYrE,EAAZqE,MAAa,OAAQxK,EAAAC,EAAAC,cAAA,oBAAYsK,EAAZ,gBCChCC,EAAW,SAAA/H,GAEf,IADA,IAAI8H,EAAQ,EACHpG,EAAI,EAAGA,EAAI1B,EAAMmG,OAAQzE,IAChCoG,GAAgB9H,EAAM0B,GAAGqE,UAG3B,OAAO+B,GAOMvE,cAJS,SAAAkB,GAAK,MAAK,CAChCqD,MAAOC,EAAStD,EAAMzE,SAGTuD,CAAyBsE,GCfzBG,ECwCA7K,6MArCbsH,MAAQ,CACN5F,SAAU,GACVoJ,SAAS,KAEXxC,SAAW,SAACb,EAAGtD,GACb/C,EAAKsG,SAALlH,OAAAmH,EAAA,EAAAnH,CAAA,GACG2D,EAAMsD,EAAEG,OAAOC,WAGpBC,SAAW,SAAAL,GAAK,IACN/F,EAAaN,EAAKkG,MAAlB5F,SACRN,EAAKlB,MAAMK,SACRmC,iBAAiBhB,GACjBG,KAAK,SAAAqF,GACJ9F,EAAKsG,SAAS,CAAEhG,SAAU,GAAIoJ,SAAS,MAExChI,MAAM,SAAAG,GACL7B,EAAKsG,SAAS,CACZH,aAActE,EAAMkF,YAI1BV,EAAEW,0FAGK,IAAAC,EAAAhH,KACCyJ,EAAYzJ,KAAKiG,MAAjBwD,QACR,OACE3K,EAAAC,EAAAC,cAAA,QAAMyH,SAAU,SAAAL,GAAC,OAAIY,EAAKP,SAASL,KACjCtH,EAAAC,EAAAC,cAAA,SAAOqG,KAAK,WAAW4B,SAAU,SAAAb,GAAC,OAAIY,EAAKC,SAASb,EAAG,eACvDtH,EAAAC,EAAAC,cAAA,UAAQqG,KAAK,UAAb,oBACCoE,GAAW3K,EAAAC,EAAAC,cAAA,oDAhCSmI,kBCOvBuC,6MACJzD,MAAQ,CACN0D,SAAS,sFAES,IAAA3C,EAAAhH,KAAA4G,EACa5G,KAAKnB,MAA5BK,EADU0H,EACV1H,SAAUiG,EADAyB,EACAzB,SAClBjG,EAASoB,KAAKsJ,mBACZ,SAAA/D,GAAQ,OACNA,GACA3G,EAAS2C,UAAUrB,KAAK,SAAAqJ,GACtB1E,EzBNwB,CAChCE,KAAM,YACN7D,MyBI0BqI,IAClB7C,EAAKX,SAAS,CACZsD,SAAS,yCAMV,IACCA,EAAY3J,KAAKiG,MAAjB0D,QACR,OACE7K,EAAAC,EAAAC,cAAA,OAAK8K,UAAU,OACbhL,EAAAC,EAAAC,cAAC+K,EAAD,MACAjL,EAAAC,EAAAC,cAACgL,EAAD,MACCL,EACC7K,EAAAC,EAAAC,cAAA,sBAEAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACiL,EAAD,MACAnL,EAAAC,EAAAC,cAACkL,EAAD,OAGJpL,EAAAC,EAAAC,cAACmL,EAAD,cAhCcvL,aCTP8K,ED+CA/K,EAAaoG,cAAU2E,IE3ChCU,6MACJnE,MAAQ,CACNnF,KAAM,GACNX,MAAO,GACPE,SAAU,GACV6F,aAAc,QAEhBC,YAAc,SAACC,EAAGtD,GAChB/C,EAAKsG,SAALlH,OAAAmH,EAAA,EAAAnH,CAAA,GACG2D,EAAMsD,EAAEG,OAAOC,WAGpBC,SAAW,SAAAC,GAAS,IAAAC,EACgB5G,EAAKkG,MAA/B9F,EADUwG,EACVxG,MAAOW,EADG6F,EACH7F,KAAMT,EADHsG,EACGtG,SACrBN,EAAKlB,MAAMK,SACRgB,iCAAiCC,EAAOW,EAAMT,GAC9CG,KAAK,SAAAqF,GACJ9F,EAAKsG,SAALlH,OAAA0H,EAAA,EAAA1H,CAAA,GAAmBY,EAAKkG,QACxBlG,EAAKlB,MAAMqG,QAAQzC,KAAKgD,KAEzBhE,MAAM,SAAAG,GACL7B,EAAKsG,SAAS,CACZH,aAActE,EAAMkF,YAI1BJ,EAAMK,0FAEC,IAAAC,EAAAhH,KACCkG,EAAiBlG,KAAKiG,MAAtBC,aACR,OACEpH,EAAAC,EAAAC,cAAA,QAAMyH,SAAU,SAAAL,GAAC,OAAIY,EAAKP,SAASL,KACjCtH,EAAAC,EAAAC,cAAA,WAAMkH,GACNpH,EAAAC,EAAAC,cAAA,qBAEEF,EAAAC,EAAAC,cAAA,SAAOiI,SAAU,SAAAb,GAAC,OAAIY,EAAKb,YAAYC,EAAG,YAE5CtH,EAAAC,EAAAC,cAAA,sBAEEF,EAAAC,EAAAC,cAAA,SAAOiI,SAAU,SAAAb,GAAC,OAAIY,EAAKb,YAAYC,EAAG,aAE5CtH,EAAAC,EAAAC,cAAA,yBAEEF,EAAAC,EAAAC,cAAA,SACEqG,KAAK,WACL4B,SAAU,SAAAb,GAAC,OAAIY,EAAKb,YAAYC,EAAG,gBAGvCtH,EAAAC,EAAAC,cAAA,UAAQqG,KAAK,UAAb,kBAhDiB8B,iBCJVkD,EDyDArF,YAAWrG,EAAayL,IEzDxBE,oLCGX,OACExL,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACuL,EAAD,cAJmCpD,iBCErCqD,8MACJvE,MAAQ,CACN9F,MAAO,MAETgG,YAAc,SAACC,EAAGtD,GAChB/C,EAAKsG,SAALlH,OAAAmH,EAAA,EAAAnH,CAAA,GACG2D,EAAMsD,EAAEG,OAAOC,WAGpBC,SAAW,SAAAC,GAAS,IACVvG,EAAUJ,EAAKkG,MAAf9F,MACRJ,EAAKlB,MAAMK,SACRiC,gBAAgBhB,GAChBK,KAAK,SAAAqF,GACJ9F,EAAKsG,SAALlH,OAAA0H,EAAA,EAAA1H,CAAA,GAAmBY,EAAKkG,UAEzBxE,MAAM,SAAAG,GACL7B,EAAKsG,SAAS,CACZH,aAActE,EAAMkF,YAI1BJ,EAAMK,0FAEC,IAAAC,EAAAhH,KACP,OACElB,EAAAC,EAAAC,cAAA,QAAMyH,SAAU,SAAAL,GAAC,OAAIY,EAAKP,SAASL,KACjCtH,EAAAC,EAAAC,cAAA,qEACAF,EAAAC,EAAAC,cAAA,SACEqG,KAAK,QACL4B,SAAU,SAAAb,GAAC,OAAIY,EAAKb,YAAYC,EAAG,UACnCc,YAAY,UAEdpI,EAAAC,EAAAC,cAAA,UAAQqG,KAAK,UAAb,gBAjCqB8B,iBCHdqD,GDyCAxF,YAAWrG,EAAa6L,KEzCxBC,WCQD,SAAAxF,GAA4C,IAAzCyF,EAAyCzF,EAAzCyF,YAAaC,EAA4B1F,EAA5B0F,KAAMnC,EAAsBvD,EAAtBuD,SAClC,OACE1J,EAAAC,EAAAC,cAAA,OAAK8K,UAAWa,EAAO,sBAAwB,sBAC7C7L,EAAAC,EAAAC,cAAA,WAAS8K,UAAU,cAChBtB,EACD1J,EAAAC,EAAAC,cAAA,UAAQoG,QAASsF,GAAY,IAA7B,aCTFE,8MACJ3E,MAAQ,CACN9F,MAAO,GACPiD,QAAS,GACTD,KAAM,GACN0H,eAAe,EACfC,WAAW,KAQbC,iBAAmB,WACIhL,EAAKlB,MAAlBK,SACCyE,aAAanD,KAAK,SAAAqJ,GACzB,IAAI1H,EAAQhD,OAAOkD,OAAOwH,GACtB1G,EAAOhE,OAAOgE,KAAK0G,GACvB9J,EAAKsG,SAAS,CACZjD,QAASjB,EACTgB,KAAMA,SAIZ8D,SAAW,SAACb,EAAGtD,GACb/C,EAAKsG,SAALlH,OAAAmH,EAAA,EAAAnH,CAAA,GACG2D,EAAMsD,EAAEG,OAAOC,WAGpBwE,WAAa,WACXjL,EAAKsG,SAAS,CACZlG,MAAO,QAGXuK,YAAc,SAAAO,GACZlL,EAAKsG,SAAS,CACZyE,UAAWG,wFA7BK,IAAAjE,EAAAhH,KACGA,KAAKnB,MAAlBK,SACCoB,KAAKsJ,mBACZ,SAAA/D,GAAQ,OAAIA,GAAYmB,EAAK+D,sDA8BxB,IAAAG,EAAAlL,KAAA4G,EACuB5G,KAAKnB,MAA3BK,EADD0H,EACC1H,SAAUgG,EADX0B,EACW1B,QADXyB,EAEoD3G,KAAKiG,MAAxD7C,EAFDuD,EAECvD,QAASD,EAFVwD,EAEUxD,KAAMhD,EAFhBwG,EAEgBxG,MAAO0K,EAFvBlE,EAEuBkE,cAAeC,EAFtCnE,EAEsCmE,UAE7C,OACEhM,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEqG,KAAK,QACLmB,MAAOxG,KAAKiG,MAAM9F,MAClB8G,SAAU,SAAAb,GAAC,OAAI8E,EAAKjE,SAASb,EAAG,YAElCtH,EAAAC,EAAAC,cAAA,UACEoG,QAAS,WACPlG,EAASgD,UAAUgJ,EAAKjF,MAAM9F,OAAOK,KAAK,SAAAqJ,IAC5B,IAARA,EACFqB,EAAK7E,SAAS,CACZwE,eAAe,EACfC,WAAW,KAGbI,EAAKH,mBACLG,EAAKF,kBAVb,cAiBAlM,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,qBAECoE,EAAQJ,IAAI,SAACc,EAAQZ,GAAT,OACXpE,EAAAC,EAAAC,cAAA,OAAK8D,IAAKgB,EAAOlD,KACdkD,EAAOnB,UAAYmB,EAAOlB,UAAYkB,EAAOpB,UAC5C5D,EAAAC,EAAAC,cAAA,SAAI8E,EAAO3D,MAAX,cAED2D,EAAOnB,UAAYmB,EAAOlB,WAAakB,EAAOpB,UAC7C5D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAI8E,EAAO3D,OACXrB,EAAAC,EAAAC,cAAA,UACEoG,QAAS,WACPlG,EAAS2D,aAAaiB,EAAQX,EAAKD,IACnCgI,EAAKH,qBAHT,WAUHjH,EAAOnB,SAAWmB,EAAOlB,UACxB9D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAI8E,EAAO3D,MAAX,eACArB,EAAAC,EAAAC,cAAA,QACEoG,QAAS,WACPlG,EAASwE,aAAaI,GACtBoH,EAAKH,qBAHT,SAYPF,GACC/L,EAAAC,EAAAC,cAACmM,GAAD,CAAOT,YAAa,kBAAMQ,EAAKR,aAAaC,KAAMG,GAChDhM,EAAAC,EAAAC,cAAA,0BACiBmB,EADjB,6CAGArB,EAAAC,EAAAC,cAAA,UACEoG,QAAS,WACPlG,EAASqE,aAAapD,GACtB+K,EAAKR,aAAY,KAHrB,uBAWN5L,EAAAC,EAAAC,cAAA,UACEoG,QAAS,WACPlG,EAAS0E,mBAAmBsH,EAAKjF,MAAM7C,SACvC8B,EAAQzC,KAAR,aAAAa,OAA0BpE,EAASoB,KAAKK,YAAYC,QAHxD,6BAzHeuG,iBCJRyD,GD0IA5F,YAAWrG,EAAaiM,KE1IxBQ,GCoIAzM,6MAjIbsH,MAAQ,CACNoF,OAAQ,GACRC,YAAa,KACbhH,MAAO,GACPiH,UAAU,KAEZC,YAAcC,OAAOC,SAASC,OAAOC,MAAM,KAAK,KAIhDnH,UAAY,WACV1E,EAAKlB,MAAMK,SAASuF,UAAU1E,EAAKyL,aAAahL,KAAK,SAAAqJ,GACnD,IAAIwB,EAASlM,OAAOkD,OAAOwH,GAAK7G,IAAI,SAACoB,EAAOlB,GAAR,OAAA/D,OAAA0H,EAAA,EAAA1H,CAAA,GAC/BiF,EAD+B,CAElCtB,IAAK3D,OAAOgE,KAAK0G,GAAK3G,OAExBnD,EAAKsG,SAAS,CACZgF,gBAINQ,eAAiB,SAAAC,GACf/L,EAAKsG,SAAS,CACZiF,YAAaQ,OAGjB7E,SAAW,SAACb,EAAGtD,GAAJ,OACT/C,EAAKsG,SAALlH,OAAAmH,EAAA,EAAAnH,CAAA,GACG2D,EAAMsD,EAAEG,OAAOC,WAEpBuF,eAAiB,SAAAC,GACfjM,EAAKsG,SAAS,CACZkF,SAAUS,wFAxBZhM,KAAKyE,6CA2BE,IAAAuC,EAAAhH,KACCd,EAAac,KAAKnB,MAAlBK,SADDyH,EASH3G,KAAKiG,MANPoF,EAHK1E,EAGL0E,OACAC,EAJK3E,EAIL2E,YACAhH,EALKqC,EAKLrC,MACAiH,EANK5E,EAML4E,SACAU,EAPKtF,EAOLsF,YACAC,EARKvF,EAQLuF,YAGF,OACEpN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQoG,QAAS,kBAAM4B,EAAK6E,eAAe,SAA3C,OACA/M,EAAAC,EAAAC,cAAA,UAAQoG,QAAS,kBAAM4B,EAAK6E,eAAe,YAA3C,UACA/M,EAAAC,EAAAC,cAAA,UAAQoG,QAAS,kBAAM4B,EAAK6E,eAAe,WAA3C,SACCP,GACCxM,EAAAC,EAAAC,cAAA,sBAEEF,EAAAC,EAAAC,cAAA,SACEkI,YAAY,2CACZD,SAAU,SAAAb,GAAC,OAAIY,EAAKC,SAASb,EAAG,YAElCtH,EAAAC,EAAAC,cAAA,UACEoG,QAAS,WACPlG,EAASiF,SAASmH,EAAatE,EAAKwE,YAAalH,GACjD0C,EAAKvC,cAHT,SAMS6G,IAIbxM,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,oBACCqM,EAAOrI,IAAI,SAAAoB,GAAK,OACftF,EAAAC,EAAAC,cAAA,OAAK8D,IAAKsB,EAAMtB,KACdhE,EAAAC,EAAAC,cAAA,SAAIoF,EAAMjE,OACToL,IAAanH,EAAMtB,IAClBhE,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SACEkI,YAAa9C,EAAMA,MACnB6C,SAAU,SAAAb,GAAC,OAAIY,EAAKC,SAASb,EAAG,kBAElCtH,EAAAC,EAAAC,cAAA,SACEkI,YAAa9C,EAAME,MACnB2C,SAAU,SAAAb,GAAC,OAAIY,EAAKC,SAASb,EAAG,mBAIpCtH,EAAAC,EAAAC,cAAA,SACGoF,EAAMA,MACNA,EAAME,OAAN,MAAAhB,OAAqBc,EAAME,QAGhCxF,EAAAC,EAAAC,cAAA,UACEoG,QAAS,WACHmG,GACFrM,EACGsF,YACCwC,EAAKwE,YACLpH,EAAMtB,IACNmJ,EACAC,GAED1L,KAAK,WACJwG,EAAK+E,gBAAe,GACpB/E,EAAKvC,cAGXuC,EAAK+E,eAAe3H,EAAMtB,OAf9B,UAoBCyI,GACCzM,EAAAC,EAAAC,cAAA,UAAQoG,QAAS,kBAAM4B,EAAK+E,gBAAe,KAA3C,QAEFjN,EAAAC,EAAAC,cAAA,UACEoG,QAAS,WACPlG,EAASqF,YAAYyC,EAAKwE,YAAapH,EAAMtB,KAC7CkE,EAAKvC,cAHT,sBAlHOhG,IAAM0I,gBCwCZxI,wNA7BbsH,MAAQ,CACNJ,SAAU,yFAEQ,IAAAmB,EAAAhH,KAClBA,KAAKnB,MAAMK,SAASoB,KAAKsJ,mBAAmB,SAAA/D,GAC1CA,EACImB,EAAKX,SAAS,CAAER,aAChBmB,EAAKX,SAAS,CAAER,SAAU,0CAIhC,OACE/G,EAAAC,EAAAC,cAACmN,EAAA,EAAD,KACErN,EAAAC,EAAAC,cAAA,OAAK8K,UAAU,OACbhL,EAAAC,EAAAC,cAACoN,EAAD,CAAYvG,SAAU7F,KAAKiG,MAAMJ,WACjC/G,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CAAOC,K3C7BM,U2C6BgBC,UAAWnF,IACxCtI,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CAAOC,KAAM7G,EAAgB8G,UAAW7C,IACxC5K,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CAAOC,K3C7BI,S2C6BgBC,UAAW3B,KACtC9L,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CAAOC,K3C7BQ,Y2C6BgBC,UAAWnB,KAC1CtM,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CAAOC,K3ClCM,U2CkCgBC,UAAWjC,KACxCxL,EAAAC,EAAAC,cAACqN,EAAA,EAAD,CAAOC,K3C9Bc,a2C8BgBC,UAAW/B,cAvBxCrD,mBCDEqF,QACW,cAA7Bf,OAAOC,SAASe,UAEe,UAA7BhB,OAAOC,SAASe,UAEhBhB,OAAOC,SAASe,SAASC,MACvB,iFCQSlL,GA1BD,WAAwB,IAAvByE,EAAuB0G,UAAAhF,OAAA,QAAAiF,IAAAD,UAAA,GAAAA,UAAA,GAAf,GAAIE,EAAWF,UAAAhF,OAAA,EAAAgF,UAAA,QAAAC,EACpC,OAAQC,EAAOxH,MACb,IAAK,WACH,SAAA/B,OAAAnE,OAAA2N,GAAA,EAAA3N,CACK8G,GADL,CAEE,CACE5B,GAAIwI,EAAOxI,GACXmD,KAAMqF,EAAOrF,KACbD,UAAW,KAGjB,IAAK,aACH,OAAOtB,EAAMjD,IAAI,SAAA+J,GAAI,OACnBA,EAAK1I,KAAOwI,EAAOxI,GAAnBlF,OAAA0H,EAAA,EAAA1H,CAAA,GACS4N,EADT,CACexF,UAAWwF,EAAKxF,UAAY,IACvCwF,IAER,IAAK,YACH,OAAOF,EAAOrL,MAChB,IAAK,cACH,MAAO,GACT,QACE,OAAOyE,ICXE4C,GATU,WAAqD,IAApD5C,EAAoD0G,UAAAhF,OAAA,QAAAiF,IAAAD,UAAA,GAAAA,UAAA,GAA5C9H,EAAiCgI,EAAWF,UAAAhF,OAAA,EAAAgF,UAAA,QAAAC,EAC5E,OAAQC,EAAOxH,MACb,IAAK,wBACH,OAAOwH,EAAOxJ,OAChB,QACE,OAAO4C,ICHE+G,gBAAgB,CAC7BxL,SACA4G,uBCII6E,GAAQC,aAAYC,IAC1BC,IAASC,OACPvO,EAAAC,EAAAC,cAACsO,EAAA,EAAD,CAAUL,MAAOA,IACfnO,EAAAC,EAAAC,cAACuO,EAAgBC,SAAjB,CAA0BhH,MAAO,IAAI1G,GACnChB,EAAAC,EAAAC,cAACyO,GAAD,QAGJC,SAASC,eAAe,SJkHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtN,KAAK,SAAAuN,GACjCA,EAAaC","file":"static/js/main.183bbf47.chunk.js","sourcesContent":["export const HOME = '/';\r\nexport const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const ACCOUNT = '/account';\r\nexport const ADMIN = '/admin';\r\nexport const TEA_ROUND = '/tearound';\r\nexport const PASSWORD_FORGET = '/pw-forget';","import React from 'react';\r\n\r\nconst FirebaseContext = React.createContext(null);\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseContext.Consumer>\r\n      {firebase => <Component {...props} firebase={firebase} />}\r\n    </FirebaseContext.Consumer>\r\n  );\r\n\r\nexport default FirebaseContext;","import app from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\n\r\nconst config = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID\r\n};\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(config);\r\n\r\n    this.auth = app.auth();\r\n    this.db = app.database();\r\n  }\r\n  doCreateUserWithEmailAndPassword = (email, displayName, password) => {\r\n    return this.auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        return this.db\r\n          .ref(\"/users/\" + this.auth.currentUser.uid + \"/details\")\r\n          .set({ uid: this.auth.currentUser.uid, email, name: displayName });\r\n      });\r\n  };\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n  doSignOut = () => this.auth.signOut();\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n  doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\r\n\r\n  addUserData = todos => {\r\n    this.db\r\n      .ref(\"users/\" + this.auth.currentUser.uid)\r\n      .set({\r\n        todos\r\n      })\r\n      .catch(err => console.error(err));\r\n  };\r\n  getData = () => {\r\n    const userId = this.auth.currentUser.uid;\r\n    return this.db\r\n      .ref(\"/users/\" + userId)\r\n      .once(\"value\")\r\n      .then(function(snapshot) {\r\n        let todos = (snapshot.val() && snapshot.val().todos) || [];\r\n        return todos;\r\n      });\r\n  };\r\n  addFriend = email => {\r\n    return this.db\r\n      .ref(\"users/\")\r\n      .once(\"value\")\r\n      .then(snapshot => {\r\n        let users = snapshot.val() || [];\r\n        let userFound = Object.values(users).find(\r\n          user => user.details.email === email\r\n        );\r\n        if (userFound && userFound.details.uid !== this.auth.currentUser.uid) {\r\n          this.db.ref(\"users/\" + userFound.details.uid + \"/friends\").push({\r\n            email: this.auth.currentUser.email,\r\n            uid: this.auth.currentUser.uid,\r\n            outbound: false,\r\n            invited: true,\r\n            accepted: false\r\n          });\r\n          return this.db\r\n            .ref(\"users/\" + this.auth.currentUser.uid + \"/friends/\")\r\n            .push({\r\n              email: userFound.details.email,\r\n              uid: userFound.details.uid,\r\n              outbound: true,\r\n              invited: true,\r\n              accepted: false\r\n            })\r\n            .catch(err => console.err(err));\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n  };\r\n  acceptFriend = (user, key) => {\r\n    return this.db\r\n      .ref(\"users/\")\r\n      .once(\"value\")\r\n      .then(snapshot => {\r\n        let users = snapshot.val() || [];\r\n        let friendKey = Object.values(users)\r\n          .map(\r\n            (newUser, i) =>\r\n              newUser.details.email === user.email &&\r\n              Object.keys(newUser.friends)\r\n          )\r\n          .filter(key => key !== false)\r\n          .concat([]);\r\n        if (friendKey && user && user.uid !== this.auth.currentUser.uid) {\r\n          this.db.ref(\"users/\" + user.uid + \"/friends/\" + friendKey).set({\r\n            email: this.auth.currentUser.email,\r\n            uid: this.auth.currentUser.uid,\r\n            outbound: false,\r\n            invited: true,\r\n            accepted: true\r\n          });\r\n          return this.db\r\n            .ref(\"users/\" + this.auth.currentUser.uid + \"/friends/\" + key)\r\n            .set({\r\n              email: user.email,\r\n              uid: user.uid,\r\n              outbound: true,\r\n              invited: true,\r\n              accepted: true\r\n            })\r\n            .catch(err => console.err(err));\r\n        } else {\r\n          return false;\r\n        }\r\n      });\r\n  };\r\n  inviteFriend = email => {\r\n    this.db\r\n      .ref(\"users/\" + this.auth.currentUser.uid + \"/inviteFriends\")\r\n      .remove();\r\n    let name = this.auth.currentUser.displayName;\r\n    return this.db\r\n      .ref(\"users/\" + this.auth.currentUser.uid + \"/inviteFriends\")\r\n      .set({ email, inviteName: name });\r\n  };\r\n  removeFriend = (email, key) => {\r\n    return this.db\r\n      .ref(\"users/\" + this.auth.currentUser.uid + \"/friends/\" + key)\r\n      .remove();\r\n  };\r\n  getFriends = () => {\r\n    return this.db\r\n      .ref(\"users/\" + this.auth.currentUser.uid + \"/friends\")\r\n      .once(\"value\")\r\n      .then(snapshot => {\r\n        let friends = snapshot.val() || [];\r\n        return friends;\r\n      });\r\n  };\r\n  initializeTeaRound = friends => {\r\n    let friendEmails = friends.map(friend => friend.email);\r\n    this.db.ref(\"users/\" + this.auth.currentUser.uid + \"/teaRound\").update({\r\n      uid: this.auth.currentUser.uid,\r\n      email: this.auth.currentUser.email,\r\n      friends: friendEmails,\r\n      time: Date.now()\r\n    });\r\n  };\r\n  addDrink = (drink, id, notes) => {\r\n    this.db.ref(\"users/\" + id + \"/teaRound/drinks\").push({\r\n      drink,\r\n      email: this.auth.currentUser.email,\r\n      notes\r\n    });\r\n  };\r\n  removeDrink = (id, key) => {\r\n    this.db.ref(\"users/\" + id + \"/teaRound/drinks/\" + key).remove();\r\n  };\r\n  updateDrink = (id, key, drink, notes) => {\r\n    if (notes && drink) {\r\n      return this.db.ref(\"users/\" + id + \"/teaRound/drinks/\" + key).update({\r\n        drink,\r\n        email: this.auth.currentUser.email,\r\n        notes\r\n      });\r\n    } else if (notes) {\r\n      return this.db.ref(\"users/\" + id + \"/teaRound/drinks/\" + key).update({\r\n        email: this.auth.currentUser.email,\r\n        notes\r\n      });\r\n    } else if (drink) {\r\n      return this.db.ref(\"users/\" + id + \"/teaRound/drinks/\" + key).update({\r\n        drink,\r\n        email: this.auth.currentUser.email\r\n      });\r\n    } else return;\r\n  };\r\n  getDrinks = id => {\r\n    return this.db\r\n      .ref(\"users/\" + id + \"/teaRound/drinks\")\r\n      .once(\"value\")\r\n      .then(snapshot => {\r\n        let drinks = snapshot.val() || [];\r\n        return drinks;\r\n      });\r\n  };\r\n}\r\n\r\nexport default Firebase;\r\n","import FirebaseContext, { withFirebase } from \"./context\";\r\nimport Firebase from \"./firebase\";\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext, withFirebase };\r\n","export const addTodo = text => ({\r\n  type: \"ADD_TODO\",\r\n  id: Math.random(),\r\n  text\r\n});\r\nexport const setVisibilityFilter = filter => ({\r\n  type: \"SET_VISIBILITY_FILTER\",\r\n  filter\r\n});\r\n\r\nexport const claimTodo = id => ({\r\n  type: \"CLAIM_TODO\",\r\n  id\r\n});\r\nexport const callTodo = todos => ({\r\n  type: \"CALL_TODO\",\r\n  todos\r\n});\r\nexport const clearState = () => ({\r\n  type: \"CLEAR_STATE\"\r\n});\r\n\r\nexport const VisibilityFilters = {\r\n  ORDER_CREATED: \"ORDER_CREATED\",\r\n  LOWEST_FIRST: \"LOWEST_FIRST\",\r\n  HIGHEST_FIRST: \"HIGHEST_FIRST\"\r\n};\r\n","import SignOutButton from './SignOutButton';\r\nexport default SignOutButton;","import React from \"react\";\r\nimport { withFirebase } from \"../Firebase\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport {connect} from 'react-redux';\r\nimport {clearState} from '../../actions';\r\n\r\nconst SignOutButton = ({ firebase, history, dispatch }) => {\r\n  const doSignOut = () => {\r\n    firebase.doSignOut();\r\n    history.push(ROUTES.SIGN_IN);\r\n    dispatch(clearState())\r\n  };\r\n  return <button onClick={doSignOut}>Sign Out</button>;\r\n};\r\n\r\nexport default connect()(withRouter(withFirebase(SignOutButton)));\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\n\r\nimport SignOutButton from \"../SignOutButton\";\r\n\r\nconst Navigation = ({ authUser }) => (\r\n  <div>{authUser ? <NavigationAuth /> : <NavigationNonAuth />}</div>\r\n);\r\n\r\nconst NavigationAuth = () => {\r\n  return (\r\n    <div>\r\n      <ul>\r\n        <li>\r\n          <Link to={ROUTES.ACCOUNT}>Account</Link>\r\n        </li>\r\n        <li>\r\n          <Link to={ROUTES.ADMIN}>Admin</Link>\r\n        </li>\r\n        <SignOutButton />\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nconst NavigationNonAuth = () => {\r\n  return (\r\n    <div>\r\n      <ul>\r\n        <li>\r\n          <Link to={ROUTES.SIGN_IN}>Login</Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import Navigation from './Navigation';\r\nexport default Navigation;","import React, { PureComponent } from \"react\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nclass SignInForm extends PureComponent {\r\n  state = {\r\n    email: \"\",\r\n    password: \"\",\r\n    errorMessage: null\r\n  };\r\n  changeValue = (e, key) => {\r\n    this.setState({\r\n      [key]: e.target.value\r\n    });\r\n  };\r\n  onSubmit = event => {\r\n    const { email, password } = this.state;\r\n    const { firebase, history } = this.props;\r\n    firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(authUser => {\r\n        this.setState({ ...this.state });\r\n        history.push(ROUTES.ACCOUNT);\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          errorMessage: error.message\r\n        });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n  render() {\r\n    const { errorMessage } = this.state;\r\n    return (\r\n      <form onSubmit={e => this.onSubmit(e)}>\r\n        <label>\r\n          Email\r\n          <input\r\n            type=\"email\"\r\n            onChange={e => this.changeValue(e, \"email\")}\r\n            placeholder=\"email\"\r\n          />\r\n        </label>\r\n        <label>\r\n          Password\r\n          <input\r\n            type=\"password\"\r\n            onChange={e => this.changeValue(e, \"password\")}\r\n            placeholder=\"password\"\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Login</button>\r\n        {errorMessage && <p>Looks like the email or password is incorrect</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withFirebase(SignInForm));\r\n","import SignInForm from \"./SignInForm\";\r\nexport default SignInForm;\r\n","import Login from './Login';\r\nexport default Login;","import React, { PureComponent } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport SignInForm from \"../../components/SignInForm\";\r\n\r\nexport default class Login extends PureComponent {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SignInForm />\r\n        <Link to={ROUTES.SIGN_UP}>\r\n          <button>Add account</button>\r\n        </Link>\r\n        <Link to={ROUTES.PASSWORD_FORGET}>\r\n          <button>Forgot Password</button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import ToDoItem from './ToDoItem';\r\nexport default ToDoItem;","import React from \"react\";\r\n\r\ntype Props = {\r\n  text: String,\r\n  onClick: () => void,\r\n  completed: number\r\n};\r\n\r\nconst ToDoItem = ({ onClick, completed, text }: Props) => (\r\n  <div>\r\n    <p>{text}</p>\r\n    <p>{completed}</p>\r\n    <button onClick={onClick}>Completed</button>\r\n  </div>\r\n);\r\n\r\nexport default ToDoItem;\r\n","import ToDoList from './ToDoList';\r\nexport default ToDoList;","import React from \"react\";\r\nimport ToDoItem from \"../ToDoItem\";\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\ntype Props = {\r\n  todos: [{ id: number, onClick: () => void, completed: number, text: String }],\r\n  claimTodo: () => void\r\n};\r\n\r\nconst ToDoList = ({ todos, claimTodo, firebase }: Props) => {\r\n  todos.length > 0 && firebase.addUserData(todos);\r\n  return (\r\n    todos &&\r\n    todos.length > 0 &&\r\n    todos.map(item => (\r\n      <ToDoItem key={item.id} {...item} onClick={() => claimTodo(item.id)} />\r\n    ))\r\n  );\r\n};\r\nexport default withFirebase(ToDoList);\r\n","import { connect } from \"react-redux\";\r\nimport { claimTodo, VisibilityFilters } from \"../actions\";\r\nimport TodoList from \"../components/ToDoList\";\r\n\r\nconst compare = (a: Object, b: Object) =>\r\n  a.completed < b.completed ? -1 : a.completed > b.completed ? 1 : 0;\r\n\r\nconst getMostUsed = (todos, filter) => {\r\n  switch (filter) {\r\n    case VisibilityFilters.ORDER_CREATED:\r\n      return todos;\r\n    case VisibilityFilters.LOWEST_FIRST:\r\n      return todos.sort(compare);\r\n    case VisibilityFilters.HIGHEST_FIRST:\r\n      return todos.sort(compare).reverse();\r\n    default:\r\n      throw new Error(\"Unknown filter: \" + filter);\r\n  }\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  todos: getMostUsed(state.todos, state.visibilityFilters)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  claimTodo: (id) => dispatch(claimTodo(id))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(TodoList);\r\n","import Link from \"./Link\";\r\nexport default Link;\r\n","import React from \"react\";\r\n\r\ntype Prop = {\r\n  active: boolean,\r\n  children: React.ReactNode,\r\n  onClick: () => void\r\n};\r\n\r\nconst Link = ({ active, children, onClick }: Prop) => (\r\n  <button\r\n    onClick={onClick}\r\n    disabled={active}\r\n    style={{\r\n      marginLeft: \"4px\"\r\n    }}\r\n  >\r\n    {children}\r\n  </button>\r\n);\r\n\r\nexport default Link;\r\n","import { connect } from \"react-redux\";\r\nimport { setVisibilityFilter } from \"../actions\";\r\nimport Link from \"../components/Link\";\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  active: ownProps.filter === state.visibilityFilter\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => ({\r\n  onClick: () => dispatch(setVisibilityFilter(ownProps.filter))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Link);\r\n","import Footer from './Footer';\r\nexport default Footer;","import React from \"react\";\r\nimport FilterLink from \"../../containers/FilterLink\";\r\nimport { VisibilityFilters } from \"../../actions\";\r\n\r\nconst Footer = () => (\r\n  <div>\r\n    <span>Show: </span>\r\n    <FilterLink filter={VisibilityFilters.ORDER_CREATED}>FIRST</FilterLink>\r\n    <FilterLink filter={VisibilityFilters.LOWEST_FIRST}>LOWEST</FilterLink>\r\n    <FilterLink filter={VisibilityFilters.HIGHEST_FIRST}>HIGHEST</FilterLink>\r\n  </div>\r\n);\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addTodo } from \"../actions\";\r\n\r\nconst AddTodo = ({ dispatch }) => {\r\n  let input;\r\n\r\n  return (\r\n    <div>\r\n      <form\r\n        onSubmit={e => {\r\n          e.preventDefault();\r\n          if (!input.value.trim()) {\r\n            return;\r\n          }\r\n          dispatch(addTodo(input.value));\r\n          input.value = \"\";\r\n        }}\r\n      >\r\n        <input ref={node => (input = node)} />\r\n        <button type=\"submit\">Add Todo</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect()(AddTodo);\r\n","import Total from './Total';\r\nexport default Total;","import React from \"react\";\r\n\r\nconst Total = ({ total }) => {return (<p>You owe {total} tea rounds</p>)};\r\n\r\nexport default Total;\r\n","import { connect } from \"react-redux\";\r\nimport Total from \"../components/Total\";\r\n\r\nconst getTotal = todos => {\r\n  let total = 0;\r\n  for (let i = 0; i < todos.length; i++) {\r\n    total = total + todos[i].completed;\r\n  }\r\n\r\n  return total;\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  total: getTotal(state.todos)\r\n});\r\n\r\nexport default connect(mapStateToProps)(Total);\r\n","import UpdatePassword from './UpdatePassword';\r\nexport default UpdatePassword;","import React, { PureComponent } from \"react\";\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nclass UpdatePassword extends PureComponent {\r\n  state = {\r\n    password: \"\",\r\n    success: false\r\n  };\r\n  onChange = (e, key) => {\r\n    this.setState({\r\n      [key]: e.target.value\r\n    });\r\n  };\r\n  onSubmit = e => {\r\n    const { password } = this.state;\r\n    this.props.firebase\r\n      .doPasswordUpdate(password)\r\n      .then(authUser => {\r\n        this.setState({ password: \"\", success: true });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          errorMessage: error.message\r\n        });\r\n      });\r\n\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    const { success } = this.state;\r\n    return (\r\n      <form onSubmit={e => this.onSubmit(e)}>\r\n        <input type=\"password\" onChange={e => this.onChange(e, \"password\")} />\r\n        <button type=\"submit\">Set new password</button>\r\n        {success && <div>Successfully changed password</div>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(UpdatePassword);\r\n","import React, { Component } from \"react\";\r\nimport ToDoList from \"../../containers/VisibleToDoList\";\r\nimport Footer from \"../../components/Footer\";\r\nimport AddToDo from \"../../containers/AddToDo\";\r\nimport Total from \"../../containers/Total\";\r\nimport UpdatePassword from \"../../components/UpdatePassword\";\r\nimport { withFirebase } from \"../../components/Firebase\";\r\nimport { connect } from \"react-redux\";\r\nimport { callTodo } from \"../../actions\";\r\n\r\nclass Account extends Component {\r\n  state = {\r\n    loading: true\r\n  };\r\n  componentDidMount() {\r\n    const { firebase, dispatch } = this.props;\r\n    firebase.auth.onAuthStateChanged(\r\n      authUser =>\r\n        authUser &&\r\n        firebase.getData().then(res => {\r\n          dispatch(callTodo(res));\r\n          this.setState({\r\n            loading: false\r\n          });\r\n        })\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { loading } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <UpdatePassword />\r\n        <AddToDo />\r\n        {loading ? (\r\n          <div>Loading</div>\r\n        ) : (\r\n          <div>\r\n            <ToDoList />\r\n            <Total />\r\n          </div>\r\n        )}\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(connect()(Account));\r\n","import Account from \"./Account\";\r\nexport default Account;\r\n","import React, { PureComponent } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as ROUTES from \"../../constants/routes\";\r\nimport { withFirebase } from \"../Firebase\";\r\n\r\nclass SignUpForm extends PureComponent {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    errorMessage: null\r\n  };\r\n  changeValue = (e, key) => {\r\n    this.setState({\r\n      [key]: e.target.value\r\n    });\r\n  };\r\n  onSubmit = event => {\r\n    const { email, name, password } = this.state;\r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, name, password)\r\n      .then(authUser => {\r\n        this.setState({ ...this.state });\r\n        this.props.history.push(ROUTES.ACCOUNT);\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          errorMessage: error.message\r\n        });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n  render() {\r\n    const { errorMessage } = this.state;\r\n    return (\r\n      <form onSubmit={e => this.onSubmit(e)}>\r\n        <div>{errorMessage}</div>\r\n        <label>\r\n          Name:\r\n          <input onChange={e => this.changeValue(e, \"name\")} />\r\n        </label>\r\n        <label>\r\n          Email:\r\n          <input onChange={e => this.changeValue(e, \"email\")} />\r\n        </label>\r\n        <label>\r\n          Password:\r\n          <input\r\n            type=\"password\"\r\n            onChange={e => this.changeValue(e, \"password\")}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(withFirebase(SignUpForm));\r\n","import SignUpFrom from \"./SignUpFrom\";\r\nexport default SignUpFrom;\r\n","import CreateAccount from \"./CreateAccount\";\r\nexport default CreateAccount;\r\n","import React, { PureComponent } from \"react\";\r\nimport SignUpForm from \"../../components/SignUpForm\";\r\nexport default class CreateAccount extends PureComponent {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SignUpForm />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { PureComponent } from \"react\";\r\nimport { withFirebase } from \"../../components/Firebase\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass PasswordForget extends PureComponent {\r\n  state = {\r\n    email: \"\"\r\n  };\r\n  changeValue = (e, key) => {\r\n    this.setState({\r\n      [key]: e.target.value\r\n    });\r\n  };\r\n  onSubmit = event => {\r\n    const { email } = this.state;\r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(authUser => {\r\n        this.setState({ ...this.state });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          errorMessage: error.message\r\n        });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={e => this.onSubmit(e)}>\r\n        <p>Type the email you signed up with to reset your password</p>\r\n        <input\r\n          type=\"email\"\r\n          onChange={e => this.changeValue(e, \"email\")}\r\n          placeholder=\"email\"\r\n        />\r\n        <button type=\"submit\">Send</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(withFirebase(PasswordForget));\r\n","import PasswordForget from './PasswordForget';\r\nexport default PasswordForget;","import ourModal from './Modal';\r\nexport default ourModal;","import React from \"react\";\r\nimport \"./Modal.scss\";\r\n\r\ntype Props = {\r\n  toggleModal: (boolean) => void,\r\n  show: boolean,\r\n  children: React.ReactNode\r\n};\r\n\r\nconst Modal = ({ toggleModal, show, children }: Props) => {\r\n  return (\r\n    <div className={show ? \"modal display-block\" : \"modal display-none\"}>\r\n      <section className=\"modal-main\">\r\n        {children}\r\n        <button onClick={toggleModal(false)}>close</button>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\nexport default Modal;\r\n","import React, { PureComponent } from \"react\";\r\nimport Modal from \"../../components/Modal\";\r\nimport { withFirebase } from \"../../components/Firebase\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nclass TeaRound extends PureComponent {\r\n  state = {\r\n    email: \"\",\r\n    friends: [],\r\n    keys: [],\r\n    friendMessage: false,\r\n    showModal: false\r\n  };\r\n  componentDidMount() {\r\n    const { firebase } = this.props;\r\n    firebase.auth.onAuthStateChanged(\r\n      authUser => authUser && this.updateFriendList()\r\n    );\r\n  }\r\n  updateFriendList = () => {\r\n    const { firebase } = this.props;\r\n    firebase.getFriends().then(res => {\r\n      let users = Object.values(res);\r\n      let keys = Object.keys(res);\r\n      this.setState({\r\n        friends: users,\r\n        keys: keys\r\n      });\r\n    });\r\n  };\r\n  onChange = (e, key) => {\r\n    this.setState({\r\n      [key]: e.target.value\r\n    });\r\n  };\r\n  clearInput = () => {\r\n    this.setState({\r\n      email: \"\"\r\n    });\r\n  };\r\n  toggleModal = shouldShow => {\r\n    this.setState({\r\n      showModal: shouldShow\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { firebase, history } = this.props;\r\n    const { friends, keys, email, friendMessage, showModal } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <input\r\n          type=\"email\"\r\n          value={this.state.email}\r\n          onChange={e => this.onChange(e, \"email\")}\r\n        />\r\n        <button\r\n          onClick={() => {\r\n            firebase.addFriend(this.state.email).then(res => {\r\n              if (res === false) {\r\n                this.setState({\r\n                  friendMessage: true,\r\n                  showModal: true\r\n                });\r\n              } else {\r\n                this.updateFriendList();\r\n                this.clearInput();\r\n              }\r\n            });\r\n          }}\r\n        >\r\n          Add friend\r\n        </button>\r\n        <div>\r\n          <h3>Friends</h3>\r\n\r\n          {friends.map((friend, i) => (\r\n            <div key={friend.uid}>\r\n              {friend.invited && !friend.accepted && friend.outbound && (\r\n                <p>{friend.email} - Invited</p>\r\n              )}\r\n              {friend.invited && !friend.accepted && !friend.outbound && (\r\n                <div>\r\n                  <p>{friend.email}</p>\r\n                  <button\r\n                    onClick={() => {\r\n                      firebase.acceptFriend(friend, keys[i]);\r\n                      this.updateFriendList();\r\n                    }}\r\n                  >\r\n                    Accept\r\n                  </button>\r\n                </div>\r\n              )}\r\n              {friend.invited && friend.accepted && (\r\n                <div>\r\n                  <p>{friend.email} - in round</p>\r\n                  <span\r\n                    onClick={() => {\r\n                      firebase.removeFriend(friend);\r\n                      this.updateFriendList();\r\n                    }}\r\n                  >\r\n                    x\r\n                  </span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n          {friendMessage && (\r\n            <Modal toggleModal={() => this.toggleModal} show={showModal}>\r\n              <p>\r\n                It looks like {email} doesn't have an account. Invite them now\r\n              </p>\r\n              <button\r\n                onClick={() => {\r\n                  firebase.inviteFriend(email);\r\n                  this.toggleModal(false);\r\n                }}\r\n              >\r\n                Send Invite email\r\n              </button>\r\n            </Modal>\r\n          )}\r\n        </div>\r\n        <button\r\n          onClick={() => {\r\n            firebase.initializeTeaRound(this.state.friends);\r\n            history.push(`/teaRound?${firebase.auth.currentUser.uid}`);\r\n          }}\r\n        >\r\n          Trigger Tea Round\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(withFirebase(TeaRound));\r\n","import TeaRound from \"./TeaRound\";\r\nexport default TeaRound;\r\n","import Choice from \"./Choice\";\r\nexport default Choice;\r\n","import React from \"react\";\r\nimport { withFirebase } from \"../../components/Firebase\";\r\n\r\nclass Choice extends React.PureComponent {\r\n  state = {\r\n    drinks: [],\r\n    drinkChoice: null,\r\n    notes: \"\",\r\n    updating: false\r\n  };\r\n  teaRoundUid = window.location.search.split(\"?\")[1];\r\n  componentDidMount() {\r\n    this.getDrinks();\r\n  }\r\n  getDrinks = () => {\r\n    this.props.firebase.getDrinks(this.teaRoundUid).then(res => {\r\n      let drinks = Object.values(res).map((drink, i) => ({\r\n        ...drink,\r\n        key: Object.keys(res)[i]\r\n      }));\r\n      this.setState({\r\n        drinks\r\n      });\r\n    });\r\n  };\r\n  setDrinkChoice = choice => {\r\n    this.setState({\r\n      drinkChoice: choice\r\n    });\r\n  };\r\n  onChange = (e, key) =>\r\n    this.setState({\r\n      [key]: e.target.value\r\n    });\r\n  toggleUpdating = shouldUpdate => {\r\n    this.setState({\r\n      updating: shouldUpdate\r\n    });\r\n  };\r\n  render() {\r\n    const { firebase } = this.props;\r\n    const {\r\n      drinks,\r\n      drinkChoice,\r\n      notes,\r\n      updating,\r\n      changeDrink,\r\n      changeNotes\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <button onClick={() => this.setDrinkChoice(\"tea\")}>Tea</button>\r\n        <button onClick={() => this.setDrinkChoice(\"coffee\")}>Coffee</button>\r\n        <button onClick={() => this.setDrinkChoice(\"other\")}>Other</button>\r\n        {drinkChoice && (\r\n          <label>\r\n            Notes:\r\n            <input\r\n              placeholder=\"any preferences, e.g. 1 sugar, soya milk\"\r\n              onChange={e => this.onChange(e, \"notes\")}\r\n            />\r\n            <button\r\n              onClick={() => {\r\n                firebase.addDrink(drinkChoice, this.teaRoundUid, notes);\r\n                this.getDrinks();\r\n              }}\r\n            >\r\n              Order {drinkChoice}\r\n            </button>\r\n          </label>\r\n        )}\r\n        <div>\r\n          <h2>Drinks</h2>\r\n          {drinks.map(drink => (\r\n            <div key={drink.key}>\r\n              <p>{drink.email}</p>\r\n              {updating === drink.key ? (\r\n                <div>\r\n                  <input\r\n                    placeholder={drink.drink}\r\n                    onChange={e => this.onChange(e, \"changeDrink\")}\r\n                  />\r\n                  <input\r\n                    placeholder={drink.notes}\r\n                    onChange={e => this.onChange(e, \"changeNotes\")}\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <p>\r\n                  {drink.drink}\r\n                  {drink.notes && ` - ${drink.notes}`}\r\n                </p>\r\n              )}\r\n              <button\r\n                onClick={() => {\r\n                  if (updating) {\r\n                    firebase\r\n                      .updateDrink(\r\n                        this.teaRoundUid,\r\n                        drink.key,\r\n                        changeDrink,\r\n                        changeNotes\r\n                      )\r\n                      .then(() => {\r\n                        this.toggleUpdating(false);\r\n                        this.getDrinks();\r\n                      });\r\n                  }\r\n                  this.toggleUpdating(drink.key);\r\n                }}\r\n              >\r\n                Update\r\n              </button>\r\n              {updating && (\r\n                <button onClick={() => this.toggleUpdating(false)}>Undo</button>\r\n              )}\r\n              <button\r\n                onClick={() => {\r\n                  firebase.removeDrink(this.teaRoundUid, drink.key);\r\n                  this.getDrinks();\r\n                }}\r\n              >\r\n                Remove\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(Choice);\r\n","import React, { PureComponent } from \"react\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport * as ROUTES from \"./constants/routes\";\r\nimport { withFirebase } from \"./components/Firebase\";\r\nimport Navigation from \"./components/Navigation\";\r\nimport Login from \"./scenes/Login\";\r\nimport Account from \"./scenes/Account\";\r\nimport CreateAccount from \"./scenes/CreateAccount\";\r\nimport PasswordForget from \"./scenes/PasswordForget\";\r\nimport TeaRound from \"./scenes/TeaRound\";\r\nimport Choice from './scenes/Choice';\r\nimport \"./App.css\";\r\n\r\nclass App extends PureComponent<{}, State> {\r\n  state = {\r\n    authUser: null\r\n  };\r\n  componentDidMount() {\r\n    this.props.firebase.auth.onAuthStateChanged(authUser => {\r\n      authUser\r\n        ? this.setState({ authUser })\r\n        : this.setState({ authUser: null });\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Navigation authUser={this.state.authUser} />\r\n          <hr />\r\n          {/* <Route exact path={ROUTES.HOME} component={Home} /> */}\r\n          <Route path={ROUTES.SIGN_IN} component={Login} />\r\n          <Route path={ROUTES.ACCOUNT} component={Account} />\r\n          <Route path={ROUTES.ADMIN} component={TeaRound} />\r\n          <Route path={ROUTES.TEA_ROUND} component={Choice} />\r\n          <Route path={ROUTES.SIGN_UP} component={CreateAccount} />\r\n          <Route path={ROUTES.PASSWORD_FORGET} component={PasswordForget} />\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n      PushManager.subscribe()\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const todos = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TODO\":\r\n      return [\r\n        ...state,\r\n        {\r\n          id: action.id,\r\n          text: action.text,\r\n          completed: 0\r\n        }\r\n      ];\r\n    case \"CLAIM_TODO\":\r\n      return state.map(todo =>\r\n        todo.id === action.id\r\n          ? { ...todo, completed: todo.completed + 1 }\r\n          : todo\r\n      );\r\n    case \"CALL_TODO\":\r\n      return action.todos;\r\n    case \"CLEAR_STATE\":\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todos;\r\n","import { VisibilityFilters } from \"../actions\";\r\n\r\nconst visibilityFilter = (state = VisibilityFilters.ORDER_CREATED, action) => {\r\n  switch (action.type) {\r\n    case \"SET_VISIBILITY_FILTER\":\r\n      return action.filter;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default visibilityFilter;\r\n","import { combineReducers } from \"redux\";\r\nimport todos from \"./todos\";\r\nimport visibilityFilters from \"./visibilityFilters\";\r\n\r\nexport default combineReducers({\r\n  todos,\r\n  visibilityFilters\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport Firebase, { FirebaseContext } from \"./components/Firebase\";\r\n\r\nconst store = createStore(rootReducer);\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <FirebaseContext.Provider value={new Firebase()}>\r\n      <App />\r\n    </FirebaseContext.Provider>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}